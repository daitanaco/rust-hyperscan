initSidebarItems({"enum":[["BlockMode","Block scan (non-streaming) database."],["Error","Hyperscan Error"],["HsError","Hyperscan Error Codes"],["Matching","Indicating whether or not matching should continue on the target data."],["SomHorizon","Defines the precision to track start of match offsets in stream state."],["StreamingMode","Streaming database."],["Tune","Tuning Parameter"],["VectoredMode","Vectored scanning database."]],"fn":[["compile","Compile an expression into a Hyperscan database."],["version","The current Hyperscan version information."],["version_str","Utility function for identifying this release version."]],"macro":[["literal","Define `Literal` with flags"],["literals","Define multi `Literal` with flags and ID"],["pattern","Define `Pattern` with flags"],["patterns","Define multi `Pattern` with flags and ID"]],"mod":[["chimera","Chimera is a software regular expression matching engine that is a hybrid of Hyperscan and PCRE."],["prelude","The `hyperscan` Prelude"],["regex","Regex compatible interface"]],"struct":[["CompileError","Providing details of the compile error condition."],["CpuFeatures","CPU feature support flags"],["Database","A compiled pattern database that can then be used to scan data."],["DatabaseRef","A borrowed reference to a `Database`."],["ExprExt","A structure containing additional parameters related to an expression."],["ExprInfo","A type containing information related to an expression"],["Literal","The pattern with pure literal expression."],["LiteralFlags","Literal flags"],["Literals","Vec of `Literal`"],["Pattern","The pattern with basic regular expression."],["PatternFlags","Pattern flags"],["Patterns","Vec of `Pattern`"],["Platform","A type containing information on the target platform which may optionally be provided to the compile calls"],["PlatformRef","A borrowed reference to a `Platform`."],["Scratch","A large enough region of scratch space to support a given database."],["ScratchRef","A borrowed reference to a `Scratch`."],["Stream","A pattern matching state can be maintained across multiple blocks of target data"],["StreamRef","A borrowed reference to a `Stream`."]],"trait":[["Builder","The regular expression pattern database builder."],["DatabaseBuilder","The regular expression pattern database builder."],["MatchEventHandler","Definition of the match event callback function type."],["Mode","Compile mode"],["SerializedDatabase","A serialized database"]],"type":[["BlockDatabase","Block scan (non-streaming) database."],["Result","The type returned by hyperscan methods."],["StreamingDatabase","Streaming database."],["VectoredDatabase","Vectored scanning database."]]});